# -------------------------------------------------------------------------------
# Description:  
# Reference:
# Name:   正则表达式
# Author: wujun
# Date:   2021/5/6
# -------------------------------------------------------------------------------
import re
a = re.findall("樱花", "春天和爱情的樱花")
print(a)

print("="*20)

import re
# 将正则表达式编译成Pattern对象
pattern = re.compile(r'hi')
# 使用Pattern匹配文本，获得匹配结果，无法匹配时将返回None
match = pattern.match('hi,Sakura')
if match:
    # 使用Match获得分组信息
    print(match.group())

print("="*20)

# ^元字符
a = re.findall("^春天", "春天和爱情的樱花")  # 字符串开始位置与匹配规则符合就匹配，否则不匹配
b = re.findall("^樱花", "春天和爱情的樱花")  # 字符串开始位置与匹配规则符合就匹配，否则不匹配
c = re.findall("[^a-z]", "春天and爱情的Sakura")  # 反取，匹配出除字母外的字符
print(a,b,c)

print("="*20)

# $元字符
a = re.findall("春天$", "春天和爱情的樱花")  # 字符串开始位置与匹配规则符合就匹配，否则不匹配
b = re.findall("樱花$", "春天和爱情的樱花")  # 字符串开始位置与匹配规则符合就匹配，否则不匹配
print(a,b)

print("="*20)

# *元字符
# 需要字符串里完全符合，匹配规则，就匹配，（规则里的*元字符）前面的一个字符可以是0或多个原本字符
a = re.findall("樱花*", "春天和爱情的樱花花花")
print(a)

print("="*20)

# +元字符
# 需要字符串里完全符合，匹配规则，就匹配，（规则里的+元字符）前面的一个字符可以是1个或多个原本字符
a = re.findall("樱花+", "春天樱花和爱情的樱花花花")
print(a)

print("="*20)

# ？元字符
# 需要字符串里完全符合，匹配规则，就匹配，（规则里的?元字符）前面的一个字符可以是0个或1个原本字符
a = re.findall("樱花?", "春天樱和爱情的樱花花花")
print(a)

print("="*20)

# {}元字符
# {m}匹配前一个字符m次，{m,n}匹配前一个字符m至n次，若省略n，则匹配m至无限次
a = re.findall("樱花{3}", "春天樱和爱情的樱花花花")
print(a)

print("="*20)

# []元字符
# 需要字符串里完全符合，匹配规则，就匹配，（规则里的 [] 元字符）对应位置是[]里的任意一个字符就匹配
a = re.findall("[春天,爱情]的樱花", "春天的樱花和爱情的樱花花花")
print(a)

print("="*20)

# \d
a = re.findall("\d", "春天的4樱花和爱情的8樱花花花")  # \d匹配任何十进制数，它相当于类[0-9]
print(a)

print("="*20)

# \d+
a = re.findall("\d+", "春天的4222樱花和爱情的8樱花花花")  # \d匹配任何十进制数，它相当于类[0-9]
print(a)

print("="*20)

# \D
a = re.findall("\D", "春天的4222樱花和爱情的8樱花花花")  # \d匹配任何十进制数，它相当于类[0-9]
print(a)

print("="*20)

# \s
# \s匹配任何空白字符，它相当于类[\t\n\r\f\v]
a = re.findall("\s", "春天的4222樱  花和爱情的8樱\n花花花")
print(a)

print("="*20)

# \S
# \S匹配任何非空白字符，它相当于类[^\t\n\r\f\v]
a = re.findall("\S", "春天的4222樱  花和爱情的8樱\n花花花")
print(a)

print("="*20)

# \w
# \w匹配包括下划线在内任何字母数字字符，它相当于类[a-zA-Z0-9_]
a = re.findall("\w","http://www.wujunchao.top")
print(a)

print("="*20)

# \W
# \W匹配包括下非划线在内任何字母数字字符，它相当于类[^a-zA-Z0-9_]
a = re.findall("\W","http://www.wujunchao.top")
print(a)

print("="*20)

# ()元字符(分组)
# 也就是分组匹配，()里面的为一个组也可以理解成一个整体
a = re.search("(樱花)+", "春天樱花樱花和爱情的花花")  # 匹配一个或多个a4
b = a.group()
print(b)

# 也就是分组匹配，()里面的为一个组也可以理解成一个整体
# 匹配 (a) (\d0-9的数字) (+可以是1个到多个0-9的数字)
a = re.search("樱(\d+)", "春天樱215花和爱情的樱82花花花")
b = a.group()
print(b)

print("="*20)

# |元字符(或)
import re
a = re.findall(r"樱|花", "春天樱215花和爱情的樱82花花花")  # |或，或就是前后其中一个符合就匹配
print(a)

print("="*20)


